#!/usr/bin/env python3

from pathlib import Path


# path definitions
DOTFILES_DIR = Path(__file__).resolve().parent / "home"
CONFIG_SRC_DIR = DOTFILES_DIR / ".config"
CONFIG_DIR = Path.home() / ".config"


def link_config_dotfiles():
    # ensure '$HOME/.config' exists
    CONFIG_DIR.mkdir(parents=True, exist_ok=True)

    # links for '$HOME/.config'
    for item in sorted(CONFIG_SRC_DIR.iterdir()):
        source = item
        target = CONFIG_DIR / item.name

        if target.exists() or target.is_symlink():
            print(f"Skipping existing '{target}'")
        else:
            target.symlink_to(source)
            print(f"Linked '{source}' ~> '{target}'")


def link_home_dotfiles():
    dotfiles = [".ideavimrc", ".vimrc", ".zshrc"]

    # links for '$HOME'
    for dotfile in dotfiles:
        source = DOTFILES_DIR / dotfile
        target = Path.home() / dotfile

        if target.exists() or target.is_symlink():
            print(f"Skipping existing '{target}'")
        else:
            target.symlink_to(source)
            print(f"Linked '{source}' ~> '{target}'")


if __name__ == "__main__":
    link_config_dotfiles()
    link_home_dotfiles()
